name: CI-CD

on:
  push:
    branches:
      - main
      - app-dev
  pull_request:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_prefix: "demo"        # Change this if needed
      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build & push microservice1
        if: github.ref == 'refs/heads/app-dev'
        run: |
          docker build -t microservice1:latest ./microservice1-api
          docker tag microservice1:latest docker.io/${{ secrets.DOCKERHUB_USERNAME }}/microservice1:latest
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/microservice1:latest

      - name: Build & push microservice2
        if: github.ref == 'refs/heads/app-dev'
        run: |
          docker build -t microservice2:latest ./microservice2-worker
          docker tag microservice2:latest docker.io/${{ secrets.DOCKERHUB_USERNAME }}/microservice2:latest
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/microservice2:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0 

      # - name: Terraform init
      #   working-directory: ./terraform
      #   run: terraform init

      # - name: Terraform apply
      #   working-directory: ./terraform
      #   run: terraform apply -auto-approve
      - name: Terraform init
        working-directory: ./terraform
        run: terraform destroy -auto-approve