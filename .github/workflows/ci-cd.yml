name: CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_vpc_id: ${{ secrets.AWS_VPC_ID }}
      TF_VAR_subnet_ids: ${{ secrets.AWS_SUBNET_IDS }}  # This should be a JSON-formatted list, e.g., '["subnet-xxxxxxx","subnet-yyyyyyy"]'
      TF_VAR_prefix: "demo"  # Change this if needed
      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS \
            --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build & push microservice1
        run: |
          docker build -t microservice1:latest ./microservice1-api
          docker tag microservice1:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/microservice1:latest
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/microservice1:latest

      - name: Build & push microservice2
        run: |
          docker build -t microservice2:latest ./microservice2-worker
          docker tag microservice2:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/microservice2:latest
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/microservice2:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0 

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
